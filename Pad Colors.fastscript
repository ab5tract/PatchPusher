
type PadColor = Record
    Name  : String;
    Value : Integer;
end;

// ----- ----- ---- ----- Colors         


const NumberOfColors         = 18;
const NumberOfColorsCC       = 8;

var ccPadColors : array [0..NumberOfColorsCC-1] of PadColor;
const ccHALF                 = 1;     
const ccHALF_BLINK_SLOW      = 2;
const ccHALF_BLINK_FAST      = 3;
const ccFULL                 = 4;
const ccFULL_BLINK_SLOW      = 5; 
const ccFULL_BLINK_FAST      = 6;   
const ccOFF                  = 0;   
const ccON                   = 127;   
                                                  
var padColors,padColorsOff : array [0..NumberOfColors-1] of PadColor; 
const BLACK_ 		     = 0;
const DARK_GREY 	     = 1;
const GREY 		     = 2;
const WHITE_ 		     = 3;
const RED_ 		     = 5;
const AMBER 		     = 9;
const YELLOW_ 		     = 13;
const LIME 		     = 17;
const GREEN_ 		     = 21;
const SPRING 		     = 25;
const TURQUOISE 	     = 29;
const CYAN_ 		     = 33;
const SKY 		     = 37;
const OCEAN 		     = 41;
const BLUE_ 		     = 45;
const ORCHID 		     = 49;
const MAGENTA_ 		     = 3;
const PINK 		     = 57;

var scenePadColors : array [0..NumberOfColors-1] of PadColor;
const scGREEN                = 22;
const scGREEN_HALF           = 19;
const scGREEN_BLINK_SLOW     = 23;
const scGREEN_BLINK_FAST     = 24;
const scRED                  = 4;
const scRED_HALF             = 1;
const scRED_BLINK_SLOW       = 5;
const scRED_BLINK_FAST       = 6;
const scYELLOW               = 16;
const scYELLOW_HALF          = 13;
const scYELLOW_BLINK_SLOW    = 17;
const scYELLOW_BLINK_FAST    = 18;
const scAMBER                = 10;
const scAMBER_HALF           = 7;
const scAMBER_BLINK_SLOW     = 11;
const scAMBER_BLINK_FAST     = 12;
const scOFF 		             = 0;
const scON                   = 127;


var 	padColorsOutText, padColorsOffOutText,
	scenePadColorsOutText,
	ccPadColorsOutText			: tParameter;

var 	padColorsOut, padColorsOffOut,
	scenePadColorsOut,
	ccPadColorsOut			: tParameter;

var s 					: String;
var n					: Integer;


procedure setupPadColors;
begin
	padColors[0].name   := 'Dark Grey';
	padColors[0].value  := DARK_GREY;
	padColors[1].name   := 'Black';
	padColors[1].value  := BLACK_;
	padColors[2].name   := 'Grey';
	padColors[2].value  := GREY;
	padColors[3].name   := 'White';
	padColors[3].value  := WHITE_;
	padColors[4].name   := 'Red';
	padColors[4].value  := RED_;
	padColors[5].name   := 'Amber';
	padColors[5].value  := AMBER;
	padColors[6].name   := 'Yellow';
	padColors[6].value  := YELLOW_;
	padColors[7].name   := 'Lime';
	padColors[7].value  := LIME;
	padColors[8].name   := 'Green';
	padColors[8].value  := GREEN_;
	padColors[9].name   := 'Spring';
	padColors[9].value  := SPRING;
	padColors[10].name  := 'Turqoise';
	padColors[10].value := TURQUOISE;
	padColors[11].name  := 'Cyan';
	padColors[11].value := CYAN_;
	padColors[12].name  := 'Sky';
	padColors[12].value := SKY;
	padColors[13].name  := 'Ocean';
	padColors[13].value := OCEAN;
	padColors[14].name  := 'Blue';
	padColors[14].value := BLUE_;
	padColors[15].name  := 'Orchid';
	padColors[15].value := ORCHID;
	padColors[16].name  := 'Magenta';
	padColors[16].value := MAGENTA_;
	padColors[17].name  := 'Pink';
	padColors[17].value := PINK;

	padColorsOut	:= createParam('pad colors ON', ptArray);
	padColorsOutText      := createParam('pad colors ON text', ptTextfield);
	setIsSeparator(padColorsOut,true);
	setIsInput(padColorsOutText,false);
	setIsInput(padColorsOut,false);

	padColorsOffOut	:= createParam('pad colors OFF', ptArray);
	padColorsOffOutText   := createParam('pad colors OFF text', ptTextfield);
	setIsSeparator(padColorsOffOut,true);
	setIsInput(padColorsOffOut,false);
	setIsInput(padColorsOffOutText,false);

	setLength(padColorsOut,numberOfColors);
	for n:=0 to numberOfColors-1
	do begin
		if n=0
		then begin
			s := padColors[0].name;
			setDataArrayValue(padColorsOut,0,padColors[0].value);
		end
		else begin
			s:= s + ',' + padColors[n].name;
			setDataArrayValue(padColorsOut,n,padColors[n].value);
		end;
	end;
	setStringValue(padColorsOutText,s);

	setLength(padColorsOffOut,numberOfColors);
	for n:=0 to numberOfColors-1
	do begin
		if n=0
		then begin
			s := padColors[0].name + ' [Off]';
			setDataArrayValue(padColorsOffOut,0,padColors[0].value+2);
		end
		else begin
			s:= s + ',' + padColors[n].name + ' [Off]';
			setDataArrayValue(padColorsOffOut,n,padColors[n].value+2);
		end;
	end;
	setStringValue(padColorsOffOutText,s);
end;

procedure setupScenePadColors;
begin
	scenePadColors[0].name   := 'Green';
	scenePadColors[0].value  := scGREEN;
	scenePadColors[1].name   := 'Green/Half';
	scenePadColors[1].value  := scGREEN_HALF;
	scenePadColors[2].name   := 'Green/Blink Slow';
	scenePadColors[2].value  := scGREEN_BLINK_SLOW;
	scenePadColors[3].name   := 'Green/Blink Fast';
	scenePadColors[3].value  := scGREEN_BLINK_FAST;
	scenePadColors[4].name   := 'Red';
	scenePadColors[4].value  := scRED;
	scenePadColors[5].name   := 'Red/Half';
	scenePadColors[5].value  := scRED_HALF;
	scenePadColors[6].name   := 'Red/Blink Slow';
	scenePadColors[6].value  := scRED_BLINK_SLOW;
	scenePadColors[7].name   := 'Red/Blink Fast';
	scenePadColors[7].value  := scRED_BLINK_FAST;
	scenePadColors[8].name   := 'Yellow';
	scenePadColors[8].value  := scYELLOW;
	scenePadColors[9].name   := 'Yellow/Half';
	scenePadColors[9].value  := scYELLOW_HALF;
	scenePadColors[10].name  := 'Yellow/Blink Slow';
	scenePadColors[10].value := scYELLOW_BLINK_SLOW;
	scenePadColors[11].name  := 'Yellow/Blink Fast';
	scenePadColors[11].value := scYELLOW_BLINK_FAST;
	scenePadColors[12].name  := 'Amber';
	scenePadColors[12].value := scAMBER;
	scenePadColors[13].name  := 'Amber/Half';
	scenePadColors[13].value := scAMBER_HALF;
	scenePadColors[14].name  := 'Amber/Blink Slow';
	scenePadColors[14].value := scAMBER_BLINK_SLOW;
	scenePadColors[15].name  := 'Amber/Blink Fast';
	scenePadColors[15].value := scAMBER_BLINK_FAST;
	scenePadColors[16].name  := 'Off';
	scenePadColors[16].value := scOFF;
	scenePadColors[17].name  := 'On';
	scenePadColors[17].value := scON;

	scenePadColorsOut := createParam('scene pad colors', ptArray);
	setIsInput(scenePadColorsOut,false);
	setIsSeparator(scenePadColorsOut,true);
	scenePadColorsOutText := createParam('scene pad colors text', ptTextfield);
	setIsInput(scenePadColorsOutText,false);

	setLength(scenePadColorsOut,numberOfColors);
	for n:=0 to numberOfColors-1
	do begin
		if n=0
		then begin
			s := scenePadColors[0].name;
			setDataArrayValue(scenePadColorsOut,0,scenePadColors[0].value);
		end
		else begin
			s:= s + ',' + scenePadColors[n].name;
			setDataArrayValue(scenePadColorsOut,n,scenePadColors[n].value);
		end;
	end;
	setStringValue(scenePadColorsOutText,s);
end;

procedure setupCCPadColors;
begin
	ccPadColors[0].name  := 'HALF';
	ccPadColors[0].value := ccHALF;
	ccPadColors[1].name  := 'HALF_BLINK_SLOW';
	ccPadColors[1].value := ccHALF_BLINK_SLOW;
	ccPadColors[2].name  := 'HALF_BLINK_FAST';
	ccPadColors[2].value := ccHALF_BLINK_FAST;
	ccPadColors[3].name  := 'FULL';
	ccPadColors[3].value := ccFULL;
	ccPadColors[4].name  := 'FULL_BLINK_SLOW';
	ccPadColors[4].value := ccFULL_BLINK_SLOW;
	ccPadColors[5].name  := 'FULL_BLINK_FAST';
	ccPadColors[5].value := ccFULL_BLINK_FAST;
	ccPadColors[6].name  := 'OFF';
	ccPadColors[6].value := ccOFF;
	ccPadColors[7].name  := 'ON';
	ccPadColors[7].value := ccON;  
	
	setLength(ccPadColorsOut,numberOfColors);
	for n:=0 to numberOfColorsCC-1
	do begin
		if n=0
		then begin
			s := ccPadColors[0].name;
			setDataArrayValue(ccPadColorsOut,0,ccPadColors[0].value);
		end
		else begin
			s:= s + ',' + ccPadColors[n].name;
			setDataArrayValue(ccPadColorsOut,n,ccPadColors[n].value);
		end;
	end;
	setStringValue(ccPadColorsOutText,s);

	ccPadColorsOut := createParam('cc pad colors', ptArray);
	setIsInput(ccPadColorsOut,false);
	setIsSeparator(ccPadColorsOut,true);

	ccPadColorsOutText := createParam('cc pad colors text', ptTextfield);
	setIsInput(ccPadColorsOutText,false);
end;

procedure Init;
begin
    setupPadColors();
    setupScenePadColors();
    setupCCPadColors();
end;
